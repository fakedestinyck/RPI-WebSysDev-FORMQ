//Psuedocode 

//Searching Similar people 

//helper function 
function get_group_value(group_id, preferences){
	q1_vals = [] 
	q2_vals = [] 
	...
	q_14_vals = [] 
	For everyone in their group (people with same group_ID): 
		if(filter for this question is false){
			person_x_q1_val = person_x.q1 * q1_scale 
			q1_vals.append(person_x.q1); 
		} else{
			group_q1_val = 0;
		}
		if(filter for this question is false){
			person_x_q2_val = person_x.q2 * q2_scale 
			q2_vals.append(person_x.q2); 
		}  else {
			group_q2_val = 0;
		}
		...
		if(filter for this question is false){
			person_x_q14_val = person_x.q14 * q14_scale 
			q14_vals.appennd(person_x.q14); 
		} else {
			group_q14_val = 0; 
		}

	group_q1_val = avg(q1_vals); 
	group_q2_val = avg(q2_vals); 
	...
	group_q14_val = avg(q14_vals); 

	group_val = group_q1_val + group_q2_val + ... + group_q14_val / # of questions //# of questions should be 14 for now 

	return group_val
}

function search_similar(group_id, filters){
//first get the value of your own group 

Based on the person who is searching, grab all the people in their group_ID 
my_group_val = get_group_value(my_group_id, preferences); 
//individual group is done 
//now for finding groups of people w/out 
all_possible_matches = // QUERY FOR find all the groups of people by group ID of 9 - current_num 

//now all total group_values based on your preferences too 
possible_sorted_matches = [] 
for group in all_possible_matches: 
	this_group_val = get_group_value(group_id, preferences)
	group_item = (group, this_group_val); 

	similarity = abs(my_group_val - this_group_val); 
	possible_sorted_matches.append(similarity, group_id);
}

//sort the list in descending order. If the similarity val is 0, then they ARE THE PERFECT MATCH! The less the similarity 
//val is, the more compatible they are. 

possible_sorted_matches.sorted() //I'm assuming JS has a sorting method 
//if it's not in descending order, make it so 

for group in possible_sorted_matches: 
	//display the group info based on group_id